apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        //默认是友盟的渠道
        //manifestPlaceholders = [UMENG_CHANNEL_VALUE: "umeng"]
    }

    lintOptions {
        abortOnError rootProject.ext.android.abortOnError
    }

    //签名配置信息
    signingConfigs {

        def Properties localProps = new Properties()
        localProps.load(new FileInputStream(file('../local.properties')))
        def Properties keyProps = new Properties()

        // 如果读取不到'keystore.props.file'属性，就使用debug keystore

        if (localProps['keystore.props.file']) {
            keyProps.load(new FileInputStream(file(localProps['keystore.props.file'])))
        } else {
            keyProps["store"] = '../buildsystem/debug.keystore'
            keyProps["alias"] = 'android'
            keyProps["keyStorePassword"] = 'androiddebugkey'
            keyProps["keyPassword"] = 'android'
        }

        debug {
            /*  storeFile file(keyProps["store"])
              keyAlias keyProps["alias"]
              storePassword keyProps["keyStorePassword"]
              keyPassword keyProps["keyPassword"]*/
        }

        /* release {
             // release版本使用assert确保存在该属性否则报错，避免错误打包
             assert localProps['keystore.props.file'];
             storeFile file(keyProps["store"])
             keyAlias keyProps["alias"]
             storePassword keyProps["keyStorePassword"]
             keyPassword keyProps["keyPassword"]
         }*/
    }

    buildTypes {
        debug {
            //显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            debuggable true
        }
        /*release {
            //不显示LOG
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            //移除无用的res
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
            signingConfig signingConfigs.release
            //apk输出格式
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        // 输出apk名称为ganklock_v1.0_2015-01-15_wandoujia.apk
                        def fileName = "ganklock_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }*/
    }

    //友盟多渠道打包
    productFlavors {
        xiaomi {}
        wandoujia {}
        baidu {}
        fir {}
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
}

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}




dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["recyclerview-v7"]
    compile rootProject.ext.dependencies["cardview-v7"]
    compile rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["gson"]
    compile rootProject.ext.dependencies["rxandroid"]
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["converter-gson"]
    compile rootProject.ext.dependencies["adapter-rxjava"]
    compile rootProject.ext.dependencies["materialpreference"]
    compile rootProject.ext.dependencies["activeandroid"]
    compile rootProject.ext.dependencies["patternlock"]
    compile rootProject.ext.dependencies["mvp"]
    compile rootProject.ext.dependencies["bottomnavigation"]
}
